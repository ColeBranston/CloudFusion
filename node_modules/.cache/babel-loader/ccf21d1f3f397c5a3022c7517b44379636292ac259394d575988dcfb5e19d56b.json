{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jack Branston\\\\Desktop\\\\Project\\\\cloudFusion\\\\src\\\\Pages\\\\TeamsPage\\\\TeamsPage.js\",\n  _s = $RefreshSig$();\nimport Navbar from \"../NewNavbar\";\n\n//Importing neccesary libraries\nimport './card.css';\nimport { useEffect, useState } from 'react';\nimport Card from './card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TeamsPage = ({\n  returnHome\n}) => {\n  _s();\n  //Defining the api key \n  const API_URL = \"\";\n\n  //Assigning the changing variables with their corresponding functions\n  const [people, setPeople] = useState([{\n    Poster: \"N/A\",\n    Name: \"Jack Branston\"\n  }, {\n    Poster: \"N/A\",\n    Name: \"Cole Branston\"\n  }, {\n    Poster: \"N/A\",\n    Name: \"Obaid\"\n  }, {\n    Poster: \"N/A\",\n    Name: \"Ganesh\"\n  }, {\n    Poster: \"N/A\",\n    Name: \"Rad\"\n  }, {\n    Poster: \"N/A\",\n    Name: \"Shivam\"\n  }, {\n    Poster: \"N/A\",\n    Name: \"Ade\"\n  }, {\n    Poster: \"N/A\",\n    Name: \"Joann\"\n  }]);\n  const [filteredPeople, setFilteredPeople] = useState([]);\n\n  //For the filter option\n  const filterPeople = async person => {\n    const response = await fetch(`${API_URL}&s=${person}`);\n    const data = await response.json();\n\n    //Sending the data to the application\n    setPeople(data.Search);\n  };\n\n  // // For API Call\n  // useEffect ( async() =>{\n  //     const response = await fetch(`${API_URL}`)\n  //     const data = await response.json();\n\n  //     setPeople(data.Search) //For the API\n  // }, [])\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-50\",\n      children: (people === null || people === void 0 ? void 0 : people.length) > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"h-screen w-50 mt-12 bg-white flex justify-center items-center flex-wrap\",\n        children: people.map(person => /*#__PURE__*/_jsxDEV(Card, {\n          person: person\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"No People found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(TeamsPage, \"rs1TnsvejDTCmktK2UeYYr+p6mw=\");\n_c = TeamsPage;\nexport default TeamsPage;\nvar _c;\n$RefreshReg$(_c, \"TeamsPage\");","map":{"version":3,"names":["Navbar","useEffect","useState","Card","jsxDEV","_jsxDEV","Fragment","_Fragment","TeamsPage","returnHome","_s","API_URL","people","setPeople","Poster","Name","filteredPeople","setFilteredPeople","filterPeople","person","response","fetch","data","json","Search","children","className","length","map","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Jack Branston/Desktop/Project/cloudFusion/src/Pages/TeamsPage/TeamsPage.js"],"sourcesContent":["import Navbar from \"../NewNavbar\";\r\n\r\n//Importing neccesary libraries\r\nimport './card.css';\r\nimport {useEffect, useState} from 'react';\r\nimport Card from './card'\r\n\r\nconst TeamsPage = ({returnHome}) => {\r\n    //Defining the api key \r\n    const API_URL = \"\"\r\n\r\n    //Assigning the changing variables with their corresponding functions\r\n    const [people, setPeople] = useState([\r\n        {Poster: \"N/A\", Name: \"Jack Branston\"}, \r\n        {Poster: \"N/A\", Name: \"Cole Branston\"}, \r\n        {Poster: \"N/A\", Name: \"Obaid\"}, \r\n        {Poster: \"N/A\", Name: \"Ganesh\"},\r\n        {Poster: \"N/A\", Name: \"Rad\"},\r\n        {Poster: \"N/A\", Name: \"Shivam\"}, \r\n        {Poster: \"N/A\", Name: \"Ade\"}, \r\n        {Poster: \"N/A\", Name: \"Joann\"}, \r\n    \r\n    ]);\r\n\r\n    const [filteredPeople, setFilteredPeople] = useState([]);\r\n\r\n\r\n    //For the filter option\r\n    const filterPeople = async (person) => {\r\n        const response = await fetch(`${API_URL}&s=${person}`)\r\n        const data = await response.json();\r\n\r\n        //Sending the data to the application\r\n        setPeople(data.Search);\r\n    }\r\n\r\n    // // For API Call\r\n    // useEffect ( async() =>{\r\n    //     const response = await fetch(`${API_URL}`)\r\n    //     const data = await response.json();\r\n\r\n    //     setPeople(data.Search) //For the API\r\n    // }, [])\r\n    return(\r\n        <>\r\n            <div className=\"w-50\">\r\n                {people?.length > 0 ? (\r\n                    <div className='h-screen w-50 mt-12 bg-white flex justify-center items-center flex-wrap'>\r\n                        {people.map((person) => (\r\n                        <Card person={person} />\r\n                    ))}\r\n                    </div>\r\n                    ):(\r\n\r\n                        <div className='empty'>\r\n                            <h2>No People found</h2>\r\n                        </div>\r\n\r\n                )}\r\n            </div>\r\n        \r\n        </>\r\n        \r\n\r\n    );\r\n}\r\nexport default TeamsPage;"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,cAAc;;AAEjC;AACA,OAAO,YAAY;AACnB,SAAQC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AACzC,OAAOC,IAAI,MAAM,QAAQ;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEzB,MAAMC,SAAS,GAAGA,CAAC;EAACC;AAAU,CAAC,KAAK;EAAAC,EAAA;EAChC;EACA,MAAMC,OAAO,GAAG,EAAE;;EAElB;EACA,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,CACjC;IAACY,MAAM,EAAE,KAAK;IAAEC,IAAI,EAAE;EAAe,CAAC,EACtC;IAACD,MAAM,EAAE,KAAK;IAAEC,IAAI,EAAE;EAAe,CAAC,EACtC;IAACD,MAAM,EAAE,KAAK;IAAEC,IAAI,EAAE;EAAO,CAAC,EAC9B;IAACD,MAAM,EAAE,KAAK;IAAEC,IAAI,EAAE;EAAQ,CAAC,EAC/B;IAACD,MAAM,EAAE,KAAK;IAAEC,IAAI,EAAE;EAAK,CAAC,EAC5B;IAACD,MAAM,EAAE,KAAK;IAAEC,IAAI,EAAE;EAAQ,CAAC,EAC/B;IAACD,MAAM,EAAE,KAAK;IAAEC,IAAI,EAAE;EAAK,CAAC,EAC5B;IAACD,MAAM,EAAE,KAAK;IAAEC,IAAI,EAAE;EAAO,CAAC,CAEjC,CAAC;EAEF,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;;EAGxD;EACA,MAAMgB,YAAY,GAAG,MAAOC,MAAM,IAAK;IACnC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEV,OAAQ,MAAKQ,MAAO,EAAC,CAAC;IACtD,MAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;;IAElC;IACAV,SAAS,CAACS,IAAI,CAACE,MAAM,CAAC;EAC1B,CAAC;;EAED;EACA;EACA;EACA;;EAEA;EACA;EACA,oBACInB,OAAA,CAAAE,SAAA;IAAAkB,QAAA,eACIpB,OAAA;MAAKqB,SAAS,EAAC,MAAM;MAAAD,QAAA,EAChB,CAAAb,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEe,MAAM,IAAG,CAAC,gBACftB,OAAA;QAAKqB,SAAS,EAAC,yEAAyE;QAAAD,QAAA,EACnFb,MAAM,CAACgB,GAAG,CAAET,MAAM,iBACnBd,OAAA,CAACF,IAAI;UAACgB,MAAM,EAAEA;QAAO;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAC1B;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,gBAGF3B,OAAA;QAAKqB,SAAS,EAAC,OAAO;QAAAD,QAAA,eAClBpB,OAAA;UAAAoB,QAAA,EAAI;QAAe;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvB;IAEZ;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EAAC,gBAER,CAAC;AAIX,CAAC;AAAAtB,EAAA,CA1DKF,SAAS;AAAAyB,EAAA,GAATzB,SAAS;AA2Df,eAAeA,SAAS;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}